{"version":3,"file":"lib.js","sourceRoot":"./src/","sources":["lib.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Constants\n */\nconst bodyDatasetName = \"tsslock\";\nconst elementDatasetName = \"tsslockid\";\nconst bodyLockStyle =\n  \";touch-action:none!important;overscroll-behavior:none!important;overflow:hidden!important;\";\n\n// used to fix iOS body scrolling when content is not large enough to be scrolled but has overflow-y: scroll\nconst scrollContentLockStyle = \";overflow-y:hidden!important;\";\nconst preventTouchmoveHandler = (e: TouchEvent) => {\n  try {\n    e.preventDefault();\n  } catch (e) {}\n};\n\n/**\n * Lock Handler\n */\nexport const removeAllScrollLocks = () => {\n  getAllLockedElements().forEach((element) => {\n    if (!(element instanceof HTMLElement)) {\n      console.warn(\n        \"removing scroll lock for Elment\",\n        element,\n        \"is not possible, as it is not a HTMLElement\"\n      );\n      return;\n    }\n    removeScrollLock(element);\n  });\n  unlockBodyScroll();\n};\n\nexport const removeScrollLock = (element: HTMLElement) => {\n  unregisterLockIdOnBody(element);\n  unlockElement(element);\n\n  if (!hasActiveScrollLocks()) {\n    unlockBodyScroll();\n  }\n};\n\nexport const lockBodyScroll = () => {\n  const body = getBody();\n  addStyleOverride(body, bodyLockStyle);\n};\n\nconst unlockBodyScroll = () => {\n  const body = getBody();\n\n  removeStyleOverride(body, bodyLockStyle);\n};\n\nexport const lockElement = (element: HTMLElement) => {\n  addStyleOverride(element, scrollContentLockStyle);\n  element.addEventListener(\"touchmove\", preventTouchmoveHandler);\n};\n\nconst unlockElement = (element: HTMLElement) => {\n  removeStyleOverride(element, scrollContentLockStyle);\n  unregisterLockIdOnElement(element);\n  element.removeEventListener(\"touchmove\", preventTouchmoveHandler);\n};\n\n/**\n * Inline Style handler\n */\nconst addStyleOverride = (element: HTMLElement, styleOverride: string) => {\n  const currentStyle = element.getAttribute(\"style\");\n  if (currentStyle === null) {\n    return element.setAttribute(\"style\", styleOverride);\n  }\n  if (currentStyle.includes(styleOverride)) {\n    return;\n  }\n  return element.setAttribute(\"style\", `${currentStyle}${styleOverride}`);\n};\n\nconst removeStyleOverride = (element: HTMLElement, styleOverride: string) => {\n  const currentStyle = element.getAttribute(\"style\");\n  if (currentStyle == null) {\n    return;\n  }\n  const newStyle = currentStyle.replace(new RegExp(styleOverride + \"$\"), \"\");\n  if (newStyle === \"\") {\n    return element.removeAttribute(\"style\");\n  }\n  return element.setAttribute(\"style\", newStyle);\n};\n\n/**\n * Body Lock Id handling\n */\nexport const registerLockIdOnBody = (id: string) => {\n  const body = getBody();\n  if (!body.dataset[bodyDatasetName]) {\n    body.dataset[bodyDatasetName] = id;\n    return;\n  }\n  if (body.dataset[bodyDatasetName].includes(id)) {\n    // console.warn(\n    //   `scroll lock already registered for ${id}, make sure to use unique ids for elements`\n    // );\n    return;\n  }\n  body.dataset[bodyDatasetName] += `,${id}`;\n};\n\nconst unregisterLockIdOnBody = (element: HTMLElement) => {\n  const body = getBody();\n  if (!body.dataset[bodyDatasetName]) {\n    return;\n  }\n  if (!body.dataset[bodyDatasetName].includes(\",\")) {\n    body.removeAttribute(`data-${bodyDatasetName}`);\n    return;\n  }\n  const id = getElementLockId(element);\n  body.dataset[bodyDatasetName] = body.dataset[bodyDatasetName].replace(\n    `,${id}`,\n    \"\"\n  );\n\n  return;\n};\n\n/**\n * Element Lock Id handling\n */\nexport const registerLockIdOnElement = (element: HTMLElement, id: string) => {\n  return (element.dataset[elementDatasetName] = id);\n};\n\nconst getElementLockId = (element: HTMLElement) => {\n  return element.dataset[elementDatasetName];\n};\n\nconst getAllLockedElements = () =>\n  document.querySelectorAll(`[data-${elementDatasetName}]`);\n\nconst hasActiveScrollLocks = () => {\n  return getAllLockedElements().length > 0;\n};\n\nconst unregisterLockIdOnElement = (element: HTMLElement) => {\n  return element.removeAttribute(`data-${elementDatasetName}`);\n};\n\n/**\n * DOM Helper\n */\nconst getBody = () => {\n  const body = document.querySelector(\"body\");\n  if (!body) {\n    throw \"could no locate body in DOM\";\n  }\n  return body;\n};"]}